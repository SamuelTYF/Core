<Start>-><File>'EOF'
<Space>->' '
<Space>->
<File>-><FileHeader><FileBody>
<FileHeader>->
<FileHeader>-><FileHeader><UsingNamespace><Space>
<UsingNamespace>->'using'' '<NamespaceName>';'
<NamespaceName>->'Symbol'
<NamespaceName>-><NamespaceName>'.''Symbol'
<FileBody>->
<FileBody>-><FileBody><DefineNamespace><Space>
<DefineNamespace>->'namespace'' '<NamespaceName><Space>'{'<NamespaceItem>'}'
<NamespaceItem>-><Space>
<NamespaceItem>-><NamespaceItem><DefineClass><Space>
<DefineClass>-><ClassProperty>'class'' ''Symbol'<Space>'{'<ClassItem>'}'
<ClassProperty>->
<ClassProperty>-><ClassProperty>'public'' '
<ClassProperty>-><ClassProperty>'static'' '
<ClassItem>-><Space>
<ClassItem>-><ClassItem><Field><Space>
<ClassItem>-><ClassItem><Method><Space>
<Field>-><ClassItemProperty><Type>' ''Symbol'';'
<ClassItemProperty>->
<ClassItemProperty>-><ClassItemProperty>'public'' '
<ClassItemProperty>-><ClassItemProperty>'static'' '
<Type>->'void'
<Type>-><InternalType>
<Type>-><UserType>
<InternalType>->'char'
<InternalType>->'byte'
<InternalType>->'int'
<InternalType>->'double'
<InternalType>->'string'
<UserType>->'Symbol'
<UserType>-><UserType>'.''Symbol'
<Method>-><MethodHeader>';'
<Method>-><MethodHeader><LambdaBody>';'
<Method>-><MethodHeader><MethodBody>
<MethodHeader>-><ClassItemProperty><Type>' ''Symbol''('<Params>')'
<Params>-><Space>
<Params>-><UserParams>
<UserParams>-><Space><Param><Space>
<UserParams>-><UserParams>','<Space><Param><Space>
<Param>-><Type>' ''Symbol'
<MethodBody>-><Space>'{'<MethodCommands>'}'
<MethodCommands>-><Space>
<MethodCommands>-><MethodCommands><Command><Space>
<LambdaBody>->'=>'<Space><S0>
<E0>-><S1>'='<Space><S0>
<E1>-><S2>'?'<Space><S1>':'<Space><S1>
<E2>-><S2>'||'<Space><S3>
<E3>-><S3>'&&'<Space><S4>
<E4>-><S4>'=='<Space><S5>
<E4>-><S4>'!='<Space><S5>
<E5>-><S6>'<'<Space><S6>
<E5>-><S6>'>'<Space><S6>
<E6>-><S6>'+'<Space><S7>
<E6>-><S6>'-'<Space><S7>
<E7>-><S7>'*'<Space><S8>
<E7>-><S7>'/'<Space><S8>
<E7>-><S7>'%'<Space><S8>
<E8>->'('<S0>')'
<E8>-><S8>'('<FunctionParams>')'
<E8>-><S8R>'.''Symbol'
<E9>->'UInt32'
<E9>->'Int32'
<E9>->'Double'
<E9>->'Char'
<E9>->'String'
<E9>->'true'
<E9>->'false'
<R9>-><Type>
<R9>-><Type>' ''Symbol'
<S0>-><S1>
<S0>-><E0>
<S1>-><S2>
<S1>-><E1>
<S2>-><S3>
<S2>-><E2>
<S3>-><S4>
<S3>-><E3>
<S4>-><S5>
<S4>-><E4>
<S5>-><S6>
<S5>-><E5>
<S6>-><S7>
<S6>-><E6>
<S7>-><S8>
<S7>-><E7>
<S8>-><S8R>
<S8>-><R9>
<S8R>-><E8>
<S8R>-><E9>
<FunctionParams>->
<FunctionParams>-><UserFunctionParams>
<UserFunctionParams>-><FunctionParam>
<UserFunctionParams>-><UserFunctionParams>','<Space><FunctionParam>
<FunctionParam>-><S0>
<Command>-><S0>';'
<Command>-><ForCommand>
<Command>-><WhileCommand>
<Command>-><DoWhileCommand>
<Command>-><IfCommand2>
<ForCommand>->'for''('<Space><S0>';'<Space><S0>';'<Space><S0>')'<Space><CommandBody>
<WhileCommand>->'while''('<Space><S0>')'<Space><CommandBody>
<DoWhileCommand>->'do'<Space><CommandBody><Space>'while'<Space>'('<Space><S0>')'';'
<IfCommand2>->'if''('<Space><S0>')'<Space><CommandBody><Space>'else'<Space><CommandBody>
<CommandBody>->';'
<CommandBody>-><Command>
<CommandBody>->'{'<CommandBlock>'}'
<CommandBlock>-><Space>
<CommandBlock>-><CommandBlock><Command><Space>
